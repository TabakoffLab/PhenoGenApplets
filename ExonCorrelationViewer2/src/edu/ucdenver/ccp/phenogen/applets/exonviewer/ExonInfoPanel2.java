/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ExonInfoPanel2.java
 *
 * Created on Dec 20, 2011, 12:06:24 PM
 */
package edu.ucdenver.ccp.phenogen.applets.exonviewer;

import edu.ucdenver.ccp.phenogen.applets.data.Exon;
import edu.ucdenver.ccp.phenogen.applets.data.TranscriptElement;
import edu.ucdenver.ccp.phenogen.applets.data.Intron;
import edu.ucdenver.ccp.phenogen.applets.data.Gene;
import edu.ucdenver.ccp.phenogen.applets.data.ProbeSet;
import java.util.ArrayList;

/**
 *
 * @author smahaffey
 */
public class ExonInfoPanel2 extends javax.swing.JPanel {
    Exon exon=null;
    Intron intron=null;
    Gene gene=null;
    /** Creates new form ExonInfoPanel2 */
    public ExonInfoPanel2() {
        initComponents();
    }
    
    public void setExon(Exon ex,Gene gene){
        this.exon=ex;
        this.intron=null;
        this.gene=gene;
        //probePanel1.setProbe(null);
        probeJList.removeAll();
        ArrayList<ProbeSet> probes=exon.getProbeSet();
        probeJList.setListData(probes.toArray());
        exonIDlbl.setText("Exon ID:  "+exon.getID());
        lengthlbl.setText("Exon Length:  "+exon.getLen()+"bp ("+gene.getChromosome()+":"+exon.getStart()+":"+exon.getStop()+")");
        if(exon.isExclude()){
            exclusionlbl.setVisible(true);
            exclusionlbl.setText("Exclusion Reason(s):"+exon.getExclusionReasons());
        }else{
            exclusionlbl.setVisible(false);
        }
        codeLengthlbl.setText("Protein Coding Length:"+exon.getProteinCodingLength()+"bp ("+exon.getProteinCodeStart()+":"+exon.getProteinCodeStop()+")");
        codeLengthlbl.setVisible(true);
        if(probes!=null&&probes.size()>0){
            probeJList.setSelectedIndex(0);
            probeSetPanel1.setProbe(probes.get(0));
        }
    }
    
    public void setElement(TranscriptElement elem, Gene gene){
        if(elem.getType().equals("exon")){
            this.setExon(((Exon)elem), gene);
        }else{
            this.setIntron(((Intron)elem), gene);
        }
    }

    public void setIntron(Intron intron, Gene gene){
        this.exon=null;
        this.intron=intron;
        this.gene=gene;
        //probePanel1.setProbe(null);
        probeJList.removeAll();
        ArrayList<ProbeSet> probes=intron.getProbeSet();
        probeJList.setListData(probes.toArray());
        exonIDlbl.setText("Intron ID:  "+intron.getID());
        lengthlbl.setText("Intron Length:  "+intron.getLen()+"bp ("+gene.getChromosome()+":"+intron.getStart()+":"+intron.getStop()+")");
        if(intron.isExclude()){
            exclusionlbl.setVisible(true);
            exclusionlbl.setText("Exclusion Reason(s):"+exon.getExclusionReasons());
        }else{
            exclusionlbl.setVisible(false);
        }
        //codeLengthlbl.setText("Protein Coding Length:"+exon.getProteinCodingLength()+"bp ("+exon.getProteinCodeStart()+":"+exon.getProteinCodeStop()+")");
        codeLengthlbl.setVisible(false);
        if(probes!=null&&probes.size()>0){
            probeJList.setSelectedIndex(0);
            probeSetPanel1.setProbe(probes.get(0));
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grid1 = new javax.swing.JPanel();
        exonIDlbl = new javax.swing.JLabel();
        lengthlbl = new javax.swing.JLabel();
        codeLengthlbl = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        probeJList = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        exclusionlbl = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        probeSetPanel1 = new edu.ucdenver.ccp.phenogen.applets.exonviewer.ProbeSetPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder("Exon/Probe Information"));
        setPreferredSize(new java.awt.Dimension(600, 100));
        setLayout(new java.awt.GridLayout(1, 2));

        grid1.setBackground(new java.awt.Color(255, 255, 255));

        exonIDlbl.setText("Exon ID:");

        lengthlbl.setText("Exon Length:");

        codeLengthlbl.setText("Protein Coding Length:");

        jLabel4.setText("Probe Set List for this exon:");

        probeJList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        probeJList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        probeJList.setSelectionForeground(new java.awt.Color(204, 204, 204));
        probeJList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                probeJListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(probeJList);

        jButton1.setText("Hide");
        jButton1.setToolTipText("Hide the additional Exon/Probe Information.");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        exclusionlbl.setText("Exclusion Reason(s):");

        org.jdesktop.layout.GroupLayout grid1Layout = new org.jdesktop.layout.GroupLayout(grid1);
        grid1.setLayout(grid1Layout);
        grid1Layout.setHorizontalGroup(
            grid1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(grid1Layout.createSequentialGroup()
                .add(grid1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(exonIDlbl)
                    .add(lengthlbl))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 447, Short.MAX_VALUE)
                .add(jButton1))
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
            .add(grid1Layout.createSequentialGroup()
                .add(grid1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(codeLengthlbl)
                    .add(jLabel4)
                    .add(exclusionlbl))
                .add(0, 0, Short.MAX_VALUE))
        );
        grid1Layout.setVerticalGroup(
            grid1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(grid1Layout.createSequentialGroup()
                .add(grid1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(grid1Layout.createSequentialGroup()
                        .add(exonIDlbl)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(lengthlbl)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(codeLengthlbl))
                    .add(jButton1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(exclusionlbl)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE))
        );

        add(grid1);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(probeSetPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(probeSetPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
        );

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void probeJListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_probeJListValueChanged
        probeSetPanel1.setProbe((ProbeSet)probeJList.getSelectedValue());
    }//GEN-LAST:event_probeJListValueChanged
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel codeLengthlbl;
    private javax.swing.JLabel exclusionlbl;
    private javax.swing.JLabel exonIDlbl;
    private javax.swing.JPanel grid1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lengthlbl;
    private javax.swing.JList probeJList;
    private edu.ucdenver.ccp.phenogen.applets.exonviewer.ProbeSetPanel probeSetPanel1;
    // End of variables declaration//GEN-END:variables

    public void updateExonInfo() {
        if(exon!=null){
            probeJList.removeAll();
            ArrayList<ProbeSet> probes=exon.getProbeSet();
            probeJList.setListData(probes.toArray());
            exonIDlbl.setText("Exon ID:  "+exon.getID());
            lengthlbl.setText("Exon Length:  "+exon.getLen()+"bp ("+gene.getChromosome()+":"+exon.getStart()+":"+exon.getStop()+")");
            if(exon.isExclude()){
                exclusionlbl.setVisible(true);
                exclusionlbl.setText("Exclusion Reason(s):"+exon.getExclusionReasons());
            }else{
                exclusionlbl.setVisible(false);
            }
            codeLengthlbl.setText("Protein Coding Length:"+exon.getProteinCodingLength()+"bp ("+exon.getProteinCodeStart()+":"+exon.getProteinCodeStop()+")");
            if(probes.size()>0){
                probeJList.setSelectedIndex(0);
            }
        }
    }
}
