/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ucdenver.ccp.phenogen.applets.graphics;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import java.util.HashMap;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;

/**
 *
 * @author smahaffey
 */
public class ExpressionChartPanel extends javax.swing.JPanel {
    String tissue="";
    Color lineColor=Color.RED;
    ExpressionChartHeader ech=new ExpressionChartHeader();
    ExpressionChartInternalPanel ecip=new ExpressionChartInternalPanel();
    
    
    public void setStrains(String[] strains,String tissue){
        ech.setLabels(strains, tissue);
        chartScrollPane.setColumnHeaderView(ech);
        this.tissue=tissue;
        if (tissue.equals("Heart")) {
            lineColor = new Color(251,106,74);
        } else if (tissue.equals("Brown Adipose")) {
            lineColor = new Color(158,154,200);
        } else if (tissue.equals("Liver")) {
            lineColor = new Color(116,196,118);
        } else if (tissue.equals("Brain")) {
            lineColor = new Color(107,174,214);
        }
    }
    
    
    public void setProbeset(HashMap m){
        ecip.setProbeset(m);
    }
    
    public void setData(ArrayList<DefaultKeyedValues2DDataset> dkvd,ArrayList<String> probeIDList,boolean showShapes,boolean wide){
        ech.setWide(wide);
        ecip.setLineColor(lineColor);
        ecip.setData(dkvd,probeIDList,showShapes,wide);
        chartScrollPane.setViewportView(ecip);
        
    }
    
    public void setData(ArrayList<DefaultStatisticalCategoryDataset> dkvd,ArrayList<String> probeIDList,boolean showShapes,boolean showError,boolean wide){
        ech.setWide(wide);
        ecip.setLineColor(lineColor);
        ecip.setData(dkvd,probeIDList,showShapes,showError,wide);
        chartScrollPane.setViewportView(ecip);
    }
    
    public void setError(String error){
        Errorlbl.setText(error);
        this.add(Errorlbl,BorderLayout.NORTH);
        this.remove(chartScrollPane);
    }
    
    /**
     * Creates new form ExpressionChartPanel
     */
    public ExpressionChartPanel() {
        initComponents();
        this.setBackground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Errorlbl = new javax.swing.JLabel();
        chartScrollPane = new javax.swing.JScrollPane();

        Errorlbl.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        Errorlbl.setText("jLabel1");

        setLayout(new java.awt.BorderLayout());
        add(chartScrollPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Errorlbl;
    private javax.swing.JScrollPane chartScrollPane;
    // End of variables declaration//GEN-END:variables
}
